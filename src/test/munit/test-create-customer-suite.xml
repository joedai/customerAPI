<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">

    <munit:config name="munit" doc:name="MUnit configuration" mock-connectors="false" mock-inbounds="false"/>
    <spring:beans>
        <spring:import resource="classpath:customerapi.xml"/>
    </spring:beans>
    <munit:before-test name="test-create-customer-suiteBefore_Test" description="Before tests actions">
        <db:delete config-ref="MySQL_Configuration" doc:name="Clear Database">
            <db:parameterized-query><![CDATA[delete from customer]]></db:parameterized-query>
        </db:delete>
        <set-payload value="[               { &quot;firstName&quot;: &quot;TestFirstName&quot;, &quot;lastName&quot; : &quot;TestLastName&quot;, &quot;address&quot;: &quot;2 Test Street&quot;} ]" mimeType="application/json" doc:name="Set Payload"/>
        <munit:set payload="#[payload]" mimeType="application/json" doc:name="Set Message"/>
        <flow-ref name="post:/customers:application/json:customerapi-config" doc:name="Flow-ref to post:/customers:application/json:customerapi-config"/>
    </munit:before-test>
    <munit:test name="TestDataIsStoredAfterThePost" description="Test data is stored in database">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select id, first_name, last_name, address, last_modified, deleted from customer]]></db:parameterized-query>
        </db:select>
        <munit:assert-true condition="#[payload.size() == 1 &amp;&amp; payload[0].first_name.equals(&quot;TestFirstName&quot;) &amp;&amp; payload[0].last_name.equals(&quot;TestLastName&quot;) &amp;&amp; payload[0].address.equals(&quot;2 Test Street&quot;)]" doc:name="Assert data is stored in DB correctly"/>
    </munit:test>
</mule>
