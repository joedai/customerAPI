<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">
    <http:listener-config name="customerapi-httpListenerConfig" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="customerapi-config" raml="customerapi.raml" consoleEnabled="false" doc:name="Router" keepRamlBaseUri="false"/>
    <db:mysql-config name="MySQL_Configuration" host="localhost" port="3306" user="root" password="root1234" database="customer_schema" doc:name="MySQL Configuration"/>
    <flow name="customerapi-main">
        <http:listener config-ref="customerapi-httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="customerapi-config" doc:name="APIkit Router"/>
        <exception-strategy ref="customerapi-apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="customerapi-console">
        <http:listener config-ref="customerapi-httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="customerapi-config" doc:name="APIkit Console"/>
    </flow>
    <flow name="put:/customers/{id}:application/json:customerapi-config">
        <set-payload value="{&#xA;&quot;error&quot; : &quot;The body requested was invalid&quot;&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="delete:/customers/{id}:customerapi-config">
        <set-payload value="{&#xA;&quot;error&quot; : &quot;Customer not found&quot;&#xA;}" doc:name="Set Payload"/>
    </flow>
    <flow name="get:/customers:customerapi-config">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select id, first_name, last_name, address from customer]]></db:parameterized-query>
        </db:select>
        <json:object-to-json-transformer mimeType="application/json" doc:name="Object to JSON"/>
    </flow>
    <flow name="get:/customers/{id}:customerapi-config">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select id, first_name, last_name, address from customer where id = #[message.inboundProperties.'http.uri.params'.id]]]></db:parameterized-query>
        </db:select>
        <choice doc:name="Choice">
            <when expression="#[!payload.isEmpty()]">
                <set-payload value="#[payload[0]]" mimeType="application/json" doc:name="Set Payload"/>
            </when>
            <otherwise>
                <scripting:component doc:name="Groovy">
                    <scripting:script engine="Groovy"><![CDATA[throw new org.mule.module.apikit.exception.NotFoundException()]]></scripting:script>
                </scripting:component>
            </otherwise>
        </choice>
    </flow>
    <flow name="post:/customers:application/json:customerapi-config">
        <json:json-to-object-transformer returnClass="java.util.List" doc:name="JSON to Object"/>
        <foreach collection="#[message.payload]" doc:name="For Each">
            <db:insert config-ref="MySQL_Configuration" doc:name="Database">
                <db:parameterized-query><![CDATA[insert into customer (`first_name`, `last_name` , `address`) VALUES (#[payload.firstName], #[payload.lastName], #[payload.address])]]></db:parameterized-query>
            </db:insert>
        </foreach>
    </flow>
    <apikit:mapping-exception-strategy name="customerapi-apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Customer not found&quot; }" doc:name="Set Payload" mimeType="application/json"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
